blueprint:
  name: Nordpool cheap hours with restricted time window
  description:
    This blueprint uses the nordpool integration and lets you choose how many hours
    you define as cheap, restricting it to a specific time window.
  domain: automation
  input:
    grid_area:
      name: Grid area sensor
      description: This is your grid area sensor
      selector:
        entity:
          domain:
            - sensor
          integration: nordpool
          multiple: false
    cheap_hours:
      name: Cheap hours
      description: Number of cheap hours
      default: 5
      selector:
        number:
          min: 0.0
          max: 24.0
          mode: slider
          step: 1.0
          unit_of_measurement: "h"
    start_time:
      name: Start time
      description: "The first time when the action should be allowed to start."
      default: "06:00:00"
      selector:
        time: {}
    end_time:
      name: End time
      description: "The last time when the action should be allowed to run."
      default: "22:00:00"
      selector:
        time: {}
    day_monday:
      name: Run on Monday
      description: Run the action on Monday.
      default: true
      selector:
        boolean:
    day_tuesday:
      name: Run on Tuesday
      description: Run the action on Tuesday.
      default: true
      selector:
        boolean:
    day_wednesday:
      name: Run on Wednesday
      description: Run the action on Wednesday.
      default: true
      selector:
        boolean:
    day_thursday:
      name: Run on Thursday
      description: Run the action on Thursday.
      default: true
      selector:
        boolean:
    day_friday:
      name: Run on Friday
      description: Run the action on Friday.
      default: true
      selector:
        boolean:
    day_saturday:
      name: Run on Saturday
      description: Run the action on Saturday.
      default: true
      selector:
        boolean:
    day_sunday:
      name: Run on Sunday
      description: Run the action on Sunday.
      default: true
      selector:
        boolean:
    expensive:
      name: Expensive
      description: Action to run on expensive hours
      default: []
      selector:
        action: {}
    cheap:
      name: Cheap
      description: Action to run on cheap hours
      default: []
      selector:
        action: {}
variables:
  grid_area_var: !input grid_area
  cheap_hours_var: !input cheap_hours
  start_time: !input start_time
  end_time: !input end_time
  day_monday: !input day_monday
  day_tuesday: !input day_tuesday
  day_wednesday: !input day_wednesday
  day_thursday: !input day_thursday
  day_friday: !input day_friday
  day_saturday: !input day_saturday
  day_sunday: !input day_sunday
  prices_today: >-
    {% set start_time = strptime(start_time, '%H:%M:%S').time() %}
    {% set end_time = strptime(end_time, '%H:%M:%S').time() %}
    {% set now_time = now().time() %}
    {% set today_prices = state_attr(grid_area_var, 'today') %}
    {# Filter prijzen binnen het ingestelde tijdsvenster #}
    {% set filtered_prices = today_prices | selectattr('time', '>=', start_time) | selectattr('time', '<=', end_time) | list %}
    {{ filtered_prices }}
trigger:
  - platform: state
    entity_id: !input grid_area
action:
  - choose:
      - conditions:
          - condition: template
            value_template: >-
              {%- set today = now().weekday() -%}
              {%- set now_time = now().time() -%}
              {%- set start_time = strptime(start_time, '%H:%M:%S').time() -%}
              {%- set end_time = strptime(end_time, '%H:%M:%S').time() -%}
              {%- if (today == 0 and day_monday) or (today == 1 and day_tuesday) or (today == 2 and day_wednesday) or ( today == 3 and day_thursday) or (today == 4 and day_friday) or (today == 5 and day_saturday) or (today == 6 and day_sunday) -%}
                {%- if start_time <= now_time <= end_time -%}
                  {{ state_attr(grid_area_var, 'current_price')|float < (prices_today|sort)[cheap_hours_var|int] }}
                {%- else -%}
                  {{ false }}
                {%- endif -%}
              {%- else -%}
                {{ false }}
              {%- endif -%}
        sequence: !input cheap
      - conditions:
          - condition: template
            value_template: >-
              {%- set today = now().weekday() -%}
              {%- set now_time = now().time() -%}
              {%- set start_time = strptime(start_time, '%H:%M:%S').time() -%}
              {%- set end_time = strptime(end_time, '%H:%M:%S').time() -%}
              {%- if (today == 0 and day_monday) or (today == 1 and day_tuesday) or (today == 2 and day_wednesday) or ( today == 3 and day_thursday) or (today == 4 and day_friday) or (today == 5 and day_saturday) or (today == 6 and day_sunday) -%}
                {%- if start_time <= now_time <= end_time -%}
                  {{ state_attr(grid_area_var, 'current_price')|float > (prices_today|sort)[cheap_hours_var|int] }}
                {%- else -%}
                  {{ false }}
                {%- endif -%}
              {%- else -%}
                {{ false }}
              {%- endif -%}
        sequence: !input expensive
    default: []
